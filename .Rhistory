method = "REML")
# new_data is a data frame with the same predictors (x1, x2)
predictions <- predict(model, newdata = X_test, type = "response")
rmse <- sqrt(mean((y_test$military_expenditure - predictions)^2))
print(rmse)
# new_data is a data frame with the same predictors (x1, x2)
predictions <- predict(model, newdata = X_test, type = "response")
# Back-transform predictions to original scale
pred <- exp(predictions) - 1
# Calculate RMSE comparing original y_test and back-transformed predictions
rmse <- sqrt(mean((y_test - pred)^2))
pred<-as.numeric(pred)
# Calculate RMSE comparing original y_test and back-transformed predictions
rmse <- sqrt(mean((y_test - pred)^2))
print(rmse)
rmse <- sqrt(mean((y_test$military_expenditure - predictions)^2))
print(rmse)
rmse <- sqrt(mean((y_test$military_expenditure - pred)^2))
print(rmse)
# new_data is a data frame with the same predictors (x1, x2)
predictions <- predict(model, newdata = X_test, type = "response")
# Calculate RMSE comparing original y_test and back-transformed predictions
rmse <- sqrt(mean((y_test - predictions)^2))
any(is.na(y_test))
# Calculate RMSE comparing original y_test and back-transformed predictions
rmse <- sqrt(mean((y_test$military_expenditure - predictions)^2))
print(rmse)
mean_actual <- mean(y_test$military_expenditure)
relative_rmse_percent <- (rmse / mean_actual) * 100
print(paste("Relative RMSE (%):", round(relative_rmse_percent, 2)))
print(mean_actual)
relative_rmse <- 32.91  # your relative RMSE in %
rmse_units <- relative_rmse * mean_y_test / 100
print(rmse_units)
rmse_units <- relative_rmse * mean_actual / 100
print(rmse_units)
#YEOJOHNSON TRANSFORMATION
# Suppose your target variable is y_train
yj_obj <- yeojohnson(df$y_train)
model <- gam(
yj_obj$x.t ~
s(Per_capita_GNI) +
s(agriculture_and_hunting_fishing_isic) +
s(construction_isic) +
s(Imports_of_goods_and_services) +
s(mining_manifacturing_isic) +
s(transport_storage_communication_isic) +
s(GDP) +
s(Urban_population_log) +
leader_ideology_rightist +
democracy_True +
leader_ideology_leftist,
data = df,
method = "REML")
summary(model)
# Transform y_train
predictions_transformed <- predict(model, newdata = X_test)
predictions <- exp(predictions_transformed) - 1
predictions<-as.numeric(predictions)
rmse <- sqrt(mean((y_test$military_expenditure - predictions)^2))
print(rmse)
# Transform y_train
predictions_transformed <- predict(model, newdata = X_test)
predictions_original <- predict(yj_obj$x.t, newdata = predictions_transformed, inverse = TRUE)
predictions_original <- predict(yj_obj, newdata = predictions_transformed, inverse = TRUE)
rmse <- sqrt(mean((y_test$military_expenditure - predictions_original)^2))
print(rmse)
model <- gam(
y_train ~
s(Per_capita_GNI) +
s(agriculture_and_hunting_fishing_isic) +
s(construction_isic) +
s(Imports_of_goods_and_services) +
s(mining_manifacturing_isic) +
s(transport_storage_communication_isic) +
s(GDP) +
s(Urban_population_log) +
leader_ideology_rightist +
democracy_True +
leader_ideology_leftist,
data = df,
method = "REML")
# Extract plots into a list
plots <- list()
n_terms <- length(model$smooth)
p <- as.ggplot(~plot(model, select = i, residuals = TRUE, cex = 2))
for (i in 1:n_terms) {
p <- as.ggplot(~plot(model, select = i, residuals = TRUE, cex = 2))
plots[[i]] <- p
}
# Combine into a grid
grid_plot <- plot_grid(plotlist = plots, ncol = 3)  # Adjust ncol as needed
View(grid_plot)
# Save as PNG or PDF
ggsave("gam_grid_plots.png", grid_plot, width = 18, height = 15, dpi = 300)
# Save as PNG or PDF
ggsave("gam_grid_plots.png", grid_plot, width = 18, height = 15, dpi = 300)
print(grid_plot)   # or just type grid_plot on its own line
plots <- list()
n_terms <- length(model$smooth)  # or however you get number of terms
for (i in 1:n_terms) {
# create the plot for term i
p <- as.ggplot(~plot(model, select = i, residuals = TRUE, cex = 2))
# modify the plot to rotate x-axis labels and add margin
p <- p +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 10, r = 15, b = 30, l = 10)
)
plots[[i]] <- p
}
# combine and save
grid_plot <- plot_grid(plotlist = plots, ncol = 3)
print(grid_plot)
# modify the plot to rotate x-axis labels and add margin
p <- p +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 15, r = 15, b = 30, l = 10)
)
plots[[i]] <- p
for (i in 1:n_terms) {
# create the plot for term i
p <- as.ggplot(~plot(model, select = i, residuals = TRUE, cex = 2))
# modify the plot to rotate x-axis labels and add margin
p <- p +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 15, r = 15, b = 30, l = 10)
)
plots[[i]] <- p
}
# combine and save
grid_plot <- plot_grid(plotlist = plots, ncol = 3)
print(grid_plot)
# modify the plot to rotate x-axis labels and add margin
p <- p +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 15, r = 15, b = 30, l = 15)
)
plots[[i]] <- p
for (i in 1:n_terms) {
# create the plot for term i
p <- as.ggplot(~plot(model, select = i, residuals = TRUE, cex = 2))
# modify the plot to rotate x-axis labels and add margin
p <- p +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 15, r = 15, b = 30, l = 15)
)
plots[[i]] <- p
}
# combine and save
grid_plot <- plot_grid(plotlist = plots, ncol = 3)
print(grid_plot)
# modify the plot to rotate x-axis labels and add margin
p <- p +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 15, r = 15, b = 30, l = 20)
)
plots[[i]] <- p
for (i in 1:n_terms) {
# create the plot for term i
p <- as.ggplot(~plot(model, select = i, residuals = TRUE, cex = 2))
# modify the plot to rotate x-axis labels and add margin
p <- p +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 15, r = 15, b = 30, l = 20)
)
plots[[i]] <- p
}
# combine and save
grid_plot <- plot_grid(plotlist = plots, ncol = 3)
print(grid_plot)
# modify the plot to rotate x-axis labels and add margin
p <- p +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 15, r = 15, b = 30, l = 40)
)
plots[[i]] <- p
for (i in 1:n_terms) {
# create the plot for term i
p <- as.ggplot(~plot(model, select = i, residuals = TRUE, cex = 2))
# modify the plot to rotate x-axis labels and add margin
p <- p +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 15, r = 15, b = 30, l = 40)
)
plots[[i]] <- p
}
# combine and save
grid_plot <- plot_grid(plotlist = plots, ncol = 3)
print(grid_plot)
for (i in 1:n_terms) {
# create the plot for term i
p <- as.ggplot(~plot(model, select = i, residuals = TRUE, cex = 2))
# modify the plot to rotate x-axis labels and add margin
p <- p +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 15, r = 15, b = 30, l = 10)
)
plots[[i]] <- p
}
# combine and save
grid_plot <- plot_grid(plotlist = plots, ncol = 3)
print(grid_plot)
# modify the plot to rotate x-axis labels and add margin
p <- p +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 15, r = 15, b = 30, l = 5)
)
plots[[i]] <- p
for (i in 1:n_terms) {
# create the plot for term i
p <- as.ggplot(~plot(model, select = i, residuals = TRUE, cex = 2))
# modify the plot to rotate x-axis labels and add margin
p <- p +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 15, r = 15, b = 30, l = 5)
)
plots[[i]] <- p
}
# combine and save
grid_plot <- plot_grid(plotlist = plots, ncol = 3)
print(grid_plot)
for (i in 1:n_terms) {
# create the plot for term i
p <- as.ggplot(~plot(model, select = i, residuals = TRUE, cex = 2))
# modify the plot to rotate x-axis labels and add margin
p <- p +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 15, r = 20, b = 30, l = 5)
)
plots[[i]] <- p
}
# combine and save
grid_plot <- plot_grid(plotlist = plots, ncol = 3)
print(grid_plot)
# Combine into a grid
grid_plot <- plot_grid(plotlist = plots, ncol = 3)  # Adjust ncol as needed
for (i in 1:n_terms) {
# create the plot for term i
p <- as.ggplot(~plot(model, select = i, residuals = TRUE, cex = 2))
# modify the plot to rotate x-axis labels and add margin
p <- p +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 30, r = 20, b = 30, l = 5)
)
plots[[i]] <- p
}
# combine and save
grid_plot <- plot_grid(plotlist = plots, ncol = 3)
print(grid_plot)
# modify the plot to rotate x-axis labels and add margin
p <- p +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 10, r = 30, b = 30, l = 5)
)
plots[[i]] <- p
for (i in 1:n_terms) {
# create the plot for term i
p <- as.ggplot(~plot(model, select = i, residuals = TRUE, cex = 2))
# modify the plot to rotate x-axis labels and add margin
p <- p +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 10, r = 30, b = 30, l = 5)
)
plots[[i]] <- p
}
# combine and save
grid_plot <- plot_grid(plotlist = plots, ncol = 3)
print(grid_plot)
# modify the plot to rotate x-axis labels and add margin
p <- p +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 10, r = 15, b = 30, l = 40)
)
plots[[i]] <- p
for (i in 1:n_terms) {
# create the plot for term i
p <- as.ggplot(~plot(model, select = i, residuals = TRUE, cex = 2))
# modify the plot to rotate x-axis labels and add margin
p <- p +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 10, r = 15, b = 30, l = 40)
)
plots[[i]] <- p
}
# combine and save
grid_plot <- plot_grid(plotlist = plots, ncol = 3)
print(grid_plot)
plots <- list()
ist()
ist()
plots <- list()
n_terms <- length(model$smooth)  # or however you get number of terms
for (i in 1:n_terms) {
p <- as.ggplot(~plot(model, select = i, residuals = TRUE, cex = 2))
p <- p +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 10, r = 15, b = 30, l = 40)
) +
coord_cartesian(clip = "off")
plots[[i]] <- p
}
# combine and save
grid_plot <- plot_grid(plotlist = plots, ncol = 3)
print(grid_plot)
plots <- list()
n_terms <- length(model$smooth)  # or however you get number of terms
for (i in 1:n_terms) {
p <- as.ggplot(~plot(model, select = i, residuals = TRUE, cex = 2))
p <- p + theme(
axis.text.y = element_text(size = 10, margin = margin(r = 10)),
axis.title.y = element_text(size = 12, margin = margin(r = 15)),
plot.margin = margin(t = 10, r = 10, b = 10, l = 50)  # add more left margin
)
plots[[i]] <- p
}
# combine and save
grid_plot <- plot_grid(plotlist = plots, ncol = 3)
print(grid_plot)
for (i in 1:n_terms) {
# create the plot for term i
p <- as.ggplot(~plot(model, select = i, residuals = TRUE, cex = 2))
# modify the plot to rotate x-axis labels and add margin
p <- p +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 10, r = 15, b = 30, l = 40)
)
plots[[i]] <- p
}
# combine and save
grid_plot <- plot_grid(plotlist = plots, ncol = 3)
print(grid_plot)
for (i in 1:n_terms) {
# create the plot for term i
p <- as.ggplot(~plot(model, select = i, residuals = TRUE, cex = 2))
# modify the plot to rotate x-axis labels and add margin
p <- p +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 10, r = 15, b = 30, l = 40)
)
plots[[i]] <- p
}
# combine and save
grid_plot <- plot_grid(plotlist = plots, ncol = 3)
print(grid_plot)
plots <- list()
n_terms <- length(model$smooth)  # or however you get number of terms
term_names <- names(model$smooth)  # or however you get your variable names
for (i in 1:n_terms) {
p <- as.ggplot(~plot(model, select = i, residuals = TRUE, cex = 2))
p <- p +
ggtitle(term_names[i]) +     # add title with variable name
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # center & style
axis.text.y = element_text(size = 10, margin = margin(r = 10)),
axis.title.y = element_text(size = 12, margin = margin(r = 15)),
plot.margin = margin(t = 10, r = 10, b = 10, l = 50)
)
plots[[i]] <- p
}
# combine and save
grid_plot <- plot_grid(plotlist = plots, ncol = 3)
print(grid_plot)
plots <- list()
n_terms <- length(model$smooth)  # or however you get number of terms
term_names <- names(model$smooth)  # or however you get your variable names
for (i in 1:n_terms) {
# create the plot for term i
p <- as.ggplot(~plot(model, select = i, residuals = TRUE, cex = 2))
# modify the plot to rotate x-axis labels and add margin
p <- p +
ggtitle(term_names[i]) +     # add title with variable name
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 10, r = 15, b = 30, l = 40)
)
plots[[i]] <- p
}
# combine and save
grid_plot <- plot_grid(plotlist = plots, ncol = 3)
print(grid_plot)
for (i in 1:n_terms) {
# create the plot for term i
p <- as.ggplot(~plot(model, select = i, residuals = TRUE, cex = 2))
# modify the plot to rotate x-axis labels and add margin
p <- p +
ggtitle(term_names[i]) +     # add title with variable name
theme(
plot.title = element_text(hjust = 0.5, size = 8, face = "bold"),  # center & style
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 10, r = 15, b = 30, l = 40)
)
plots[[i]] <- p
}
# combine and save
grid_plot <- plot_grid(plotlist = plots, ncol = 3)
print(grid_plot)
for (i in 1:n_terms) {
# create the plot for term i
p <- as.ggplot(~plot(model, select = i, residuals = TRUE, cex = 2))
# modify the plot to rotate x-axis labels and add margin
p <- p +
ggtitle(term_names[i]) +     # add title with variable name
theme(
plot.title = element_text(hjust = 0.5, size = 8, face = "bold"),  # center & style
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 20, r = 15, b = 30, l = 40)
)
plots[[i]] <- p
}
# combine and save
grid_plot <- plot_grid(plotlist = plots, ncol = 3)
print(grid_plot)
n_terms
term_names
term_names <- names(model$smooth)  # or however you get your variable names
term_names
model$smooth
term_names <- attr(model$terms, "term.labels")
term_names
for (i in 1:n_terms) {
# create the plot for term i
p <- as.ggplot(~plot(model, select = i, residuals = TRUE, cex = 2))
# modify the plot to rotate x-axis labels and add margin
p <- p +
ggtitle(term_names[i]) +     # add title with variable name
theme(
plot.title = element_text(hjust = 0.5, size = 8, face = "bold"),  # center & style
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 20, r = 15, b = 30, l = 40)
)
plots[[i]] <- p
}
# combine and save
grid_plot <- plot_grid(plotlist = plots, ncol = 3)
print(grid_plot)
for (i in 1:n_terms) {
# create the plot for term i
p <- as.ggplot(~plot(model, select = i, residuals = TRUE, cex = 2))
# modify the plot to rotate x-axis labels and add margin
p <- p +
ggtitle(term_names[i]) +     # add title with variable name
theme(
plot.title = element_text(hjust = 0.5, size = 8, face = "bold"),  # center & style
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 10, r = 15, b = 30, l = 40)
)
plots[[i]] <- p
}
# combine and save
grid_plot <- plot_grid(plotlist = plots, ncol = 3)
print(grid_plot)
for (i in 1:n_terms) {
# create the plot for term i
p <- as.ggplot(~plot(model, select = i, residuals = TRUE, cex = 2))
# modify the plot to rotate x-axis labels and add margin
p <- p +
ggtitle(term_names[i]) +     # add title with variable name
theme(
plot.title = element_text(hjust = 0.5, size = 8, face = "bold"),  # center & style
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 10, r = 10, b = 25, l = 40)
)
plots[[i]] <- p
}
# combine and save
grid_plot <- plot_grid(plotlist = plots, ncol = 3)
print(grid_plot)
for (i in 1:n_terms) {
# create the plot for term i
p <- as.ggplot(~plot(model, select = i, residuals = TRUE, cex = 2))
# modify the plot to rotate x-axis labels and add margin
p <- p +
ggtitle(term_names[i]) +     # add title with variable name
theme(
plot.title = element_text(hjust = 0.5, size = 8, face = "bold"),  # center & style
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(angle = 45, hjust = 1, size = 8),
plot.margin = margin(t = 10, r = 10, b = 30, l = 40)
)
plots[[i]] <- p
}
# combine and save
grid_plot <- plot_grid(plotlist = plots, ncol = 3)
print(grid_plot)
